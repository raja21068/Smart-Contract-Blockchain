pragma solidity >=0.4.21 <0.7.0;

contract mortal {
     
   address owner;
   
   
  function mortal() {owner=msg.sender;}
   
  constructor() public {
    owner = msg.sender;
  }
/* Define variable owner of the type address */
  function mortal() {
   msg.sender == owner;
  }
  

/* function to recover the funds on the contract */
  function kill() {
    if (msg.sender == owner) selfdestruct(owner);
  }

contract greeter is mortal{
/* define veriable greeting of the type string */
  
  string greeting;
  


  /* this runs when the contract is executed */
  
  function greeter(string _greeting) public {
  greeting=_greeting;
  }
  
  function setGreeting(string _greeting) public{
  greeting= _greeting;
  }
  
  /* main funcation */
  
  function greet() constant returns (string){
	return greeting;
  }
}
}





